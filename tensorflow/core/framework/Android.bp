
// Copyright (C) 2017 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package {
    // See: http://go/android-license-faq
    // A large-scale-change added 'default_applicable_licenses' to import
    // all of the 'license_kinds' from "external_tensorflow_license"
    // to get the below license kinds:
    //   SPDX-license-identifier-Apache-2.0
    default_applicable_licenses: ["external_tensorflow_license"],
}

filegroup(
    name = "tensorflow_core_framework_mobile_srcs_only_runtime",
    srcs = [
        "attr_value.pb_text.cc",
        "attr_value_util.cc",
        "cancellation.cc",
        "collective.cc",
        "common_shape_fns.cc",
        "dataset.cc",
        "device.cc",
        "device_base.cc",
        "device_factory.cc",
        "full_type_inference_util.cc",
        "full_type_util.cc",
        "function.cc",
        "function_handle_cache.cc",
        "graph_def_util.cc",
        "graph_to_functiondef.cc",
        "kernel_def_builder.cc",
        "kernel_def_util.cc",
        "load_library.cc",
        "local_rendezvous.cc",
        "logging.cc",
        "lookup_interface.cc",
        "memory_types.cc",
        "metrics.cc",
        "model.cc",
        "node_def_builder.cc",
        "node_def_util.cc",
        "node_properties.cc",
        "op.cc",
        "op_def_builder.cc",
        "op_def_util.cc",
        "op_kernel.cc",
        "op_segment.cc",
        "reader_base.cc",
        "ref_var.cc",
        "rendezvous.cc",
        "resource_mgr.cc",
        "resource_var.cc",
        "run_handler.cc",
        "run_handler_util.cc",
        "shape_inference.cc",
        "tensor_slice.cc",
        "tensor_util.cc",
        "types.pb_text.cc",
        "versions.cc",
    ],
)

filegroup(
    name = "tensorflow_core_framework_mobile_srcs_no_runtime",
    srcs = [
        "allocator.cc",
        "allocator_registry.cc",
        "bfloat16.cc",
        "cpu_allocator_impl.cc",
        "kernel_shape_util.cc",
        "log_memory.cc",
        "ops_util.cc",
        "resource_handle.cc",
        "resource_handle.pb_text.cc",
        "tensor.cc",
        "tensor.pb_text.cc",
        "tensor_shape.cc",
        "tensor_shape.pb_text.cc",
        "tracking_allocator.cc",
        "typed_allocator.cc",
        "types.cc",
        "variant.cc",
        "variant_op_registry.cc",
        "variant_tensor_data.cc",
    ],
)